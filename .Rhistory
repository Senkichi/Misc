View(frozone)
qplot(x=UVB, y=Inhibit, color = Surface)
qplot(x=UVB, y=Inhibit, color = Surface, data=frozone)
frozone.plus <- transform(frozone, linhibit= log(inhibit), luvb = log(UVB))
frozone.plus <- transform(frozone, linhibit= log(Inhibit), luvb = log(UVB))
frozone.model <- lm(Inhibit ~ UVB + Surface, data = frozone)
summary(frozone.model)
frozone.plus.model <- lm(linhibit ~ luvb + Surface, data = frozone.plus)
View(frozone.plus)
qplot(x=UVB, y=Inhibit, color = Surface, data=frozone, geom = "histogram")
qplot(frozone$Inhibit, color = Surface, data=frozone, geom = "histogram")
qplot(frozone.plus$linhibit, color = Surface, data=frozone.plus, geom = "histogram")
bees <- ex0328 # Store bee pollen removal data
queens <- bees[bees$Bee == "Queen",] # queens only
queen.model1 <- lm(Removed ~ Duration, data=queens)
summary(queen.model1)
lev <- hatvalues(queen.model1)
res <- resid(queen.model1)
studres <- res/(0.1653*sqrt(1-lev))
cooks <- 0.5*(studres)^2*(lev/(1-lev)) #7a slide with h
plot(res)
plot(lev)
plot(studres)
plot(cooks)
model.removed <- lm(Removed ~ Duration, subset=Duration < 30, data=queens)
summary(model.removed)
plot(queen.model1)
frozone.plus.model <- lm(linhibit ~ luvb + Surface, data = frozone.plus)
sat <- case1201
sat2 <- transform(sat, logTakers = log(Takers))
View(sat2)
View(sat2)
frozone.plus.model2 <- frozone.plus.model[c(-1, -2),]
frozone.plus2 <- frozone.plus[c(-1, -2),]
frozone.plus2.model <- lm(linhibit ~ luvb + Surface, data = frozone.plus2)
stargazer(frozone.model, frozone.plus2.model)
summary(frozone.model)
horsey <- ex0920
horse.model <- lm(Speed ~ Condition-1 + Year, data = horsey)
summary(frozone.model)
qt(0.975, df=14)
confint(frozone.model)
frozone2 <- frozone[-17,]
frozone2.model <- lm(Inhibit ~ UVB + Surface, data = frozone2)
summary(frozone2.model)
summary(frozone.model)
confint(frozone.model)
frozone.model <- lm(Inhibit ~ UVB + Surface-1, data = frozone)
summary(frozone.model)
confint(frozone.model)
ggplot(frozone, aes(x=UVB, y=Inhibit), . ~ Surface) + geom_point()
ggplot(frozone, aes(x=UVB, y=Inhibit)) + geom_point()
ggplot(frozone, aes(x=UVB, y=Inhibit)) + geom_point() + geom_smooth(aes(group=Surface), method = "lm")
ggplot(frozone, aes(x=UVB, y=Inhibit)) + geom_point() + geom_smooth(aes(group=Surface), method = "lm", fullrange=T)
ggplot(frozone, aes(x=UVB, y=Inhibit)) + geom_point() + geom_smooth(aes(group=Surface), method = "lm")
ggplot(frozone, aes(x=UVB, y=Inhibit)) + geom_point() + geom_smooth(aes(group=Surface), method = "lm", show.legend = T)
ggplot(frozone, aes(x=UVB, y=Inhibit)) + geom_point() + geom_smooth(aes(group=Surface), method = "lm", show.legend = F)
ggplot(frozone, aes(x=UVB, y=Inhibit)) + geom_point() + geom_smooth(aes(group=Surface), method = "lm", show.legend = T)
ggplot(frozone, aes(x=UVB, y=Inhibit)) + geom_point() + geom_smooth(aes(group=Surface), method = "lm", show.legend = T, color = Surface)
ggplot(frozone, aes(x=UVB, y=Inhibit)) + geom_point() + geom_smooth(aes(group=Surface), method = "lm", show.legend = T, colour = Surface)
ggplot(frozone, aes(x=UVB, y=Inhibit)) + geom_point() + geom_smooth(aes(group=Surface), method = "lm", show.legend = T, colour = T)
ggplot(frozone, aes(x=UVB, y=Inhibit), color = Surface) + geom_point() + geom_smooth(aes(group=Surface), method = "lm", show.legend = T, inherit.aes = T)
ggplot(frozone, aes(x=UVB, y=Inhibit, color = Surface)) + geom_point() + geom_smooth(aes(group=Surface), method = "lm", show.legend = T, inherit.aes = T)
ggplot(frozone, aes(x=UVB, y=Inhibit, color = Surface)) + geom_point() + geom_smooth(aes(group=Surface), method = "lm", show.legend = T, inherit.aes = T) + labs(y= "Percent production inhibition")
birds <- ex1027
View(birds)
View(birds)
bird.model <- lm(Time ~ Pairs + Size + Status + Pairs*Size, data = birds)
summary(bird.model)
bird.model <- lm(Time ~ Pairs + Size-1 + Status-1 + Pairs*Size-1, data = birds)
summary(bird.model)
bird.model <- lm(Time ~ Pairs + Size-1 + Status + Pairs*Size-1, data = birds)
summary(bird.model)
bird.model <- lm(Time ~ Pairs + Size-1 + factor(Status) + Pairs*Size-1, data = birds)
summary(bird.model)
bird.model <- lm(Time ~ Pairs + Size + Status, data = birds)
summary(bird.model)
bird.model <- lm(Time ~ Pairs + Size + Status-1, data = birds)
summary(bird.model)
birds2 <- transform(birds, ltime = log(Time))
sizeL <- as.numeric(birds$Size == "L")
sizeS <- as.numeric(birds$Size == "S")
statusR <- as.numeric(birds$Status == "R")
statusM <- as.numeric(birds$Status == "M")
birds3 <- cbind(birds2, sizeS, sizeL, statusM, statusR)
bird.model1 <- lm(Time ~ Pairs + sizeS + statusM + Pairs*sizeS, data = birds3)
bird.model2 <- lm(Time ~ Pairs + sizeL + statusR + Pairs*sizeL, data = birds3)
bird.model3 <- lm(Time ~ Pairs + sizeS + statusR + Pairs*sizeS, data = birds3)
bird.model4 <- lm(Time ~ Pairs + sizeL + statusM + Pairs*sizeL, data = birds3)
summary(bird.model1)
bird.model1 <- lm(ltime ~ Pairs + sizeS + statusM + Pairs*sizeS, data = birds3)
bird.model2 <- lm(ltime ~ Pairs + sizeL + statusR + Pairs*sizeL, data = birds3)
bird.model3 <- lm(ltime ~ Pairs + sizeS + statusR + Pairs*sizeS, data = birds3)
bird.model4 <- lm(ltime ~ Pairs + sizeL + statusM + Pairs*sizeL, data = birds3)
summary(bird.model1)
bird.model5 <- lm(ltime ~ Pairs + Size + Pairs*Size, data = birds3)
bird.model6 <- lm(ltime ~ Pairs + Status, data = birds3)
summary(bird.model5)
summary(bird.model5)
bird.model5 <- lm(ltime ~ Pairs + Size + Status + Pairs*Size, data = birds3)
summary(bird.model5)
confint(bird.model1)
confint(bird.model2)
anova(bird.model5)
summary(bird.model1)
set.wd("D:/Documents/RStudio/Lab")
elk.data <- read.csv("Elk.csv")
elk.data <- read.csv("Elk.csv")
set.wd("D:/Documents/RStudio/Lab")
set.wd("D:/Documents/RStudio/Lab")
elk.data <- read.csv("Elk.csv")
set.wd("D:/Documents/RStudio/Lab")
elk.data <- read.csv("Elk.csv")
((20-15.5)^2)/15.5 + ((5-9.5)^2)9.5 + ((11-15.5)^2)/15.5 + ((14-9.5)^2)/9.5
((20-15.5)^2)/15.5+((5-9.5)^2)9.5 + ((11-15.5)^2)/15.5 + ((14-9.5)^2)/9.5
((20-15.5)^2)/15.5+((5-9.5)^2)/9.5 + ((11-15.5)^2)/15.5 + ((14-9.5)^2)/9.5
ricky <- data.frame(nrow = 50, ncol = 1000)
ricky[,1] <- 10
View(ricky)
ricky <- data.frame(x = 50, y = 1000)
ricky <- data.frame()
ricky[,1] <- 10
ricky <- matrix(nrow = 50, ncol = 1000)
ricky[,1] <- 10
ricky <- matrix(nrow = 51, ncol = 1000)
ricky[,1] <- 10
ricky.seq <- seq(from = 1, to = 2, by = 0.02)
for (j in 1:dim(ricky)[1]){
for (i in 2:dim(ricky)[2]) {
current.pop <- pop.20[,j-1]
pop.20[i,j] = current.pop*exp(ricky.seq[j]*(1-(current.pop/20)))
}
}
for (j in 1:dim(ricky)[1]){
for (i in 2:dim(ricky)[2]) {
current.pop <- pop.20[,j-1]
ricky[j,i] = current.pop*exp(ricky.seq[j]*(1-(current.pop/20)))
}
}
for (j in 1:dim(ricky)[1]){
for (i in 2:dim(ricky)[2]) {
current.pop <- ricky[,j-1]
ricky[j,i] = current.pop*exp(ricky.seq[j]*(1-(current.pop/20)))
}
}
for (j in 1:dim(ricky)[1]){
for (i in 2:dim(ricky)[2]) {
current.pop <- ricky[j,i-1]
ricky[j,i] = current.pop*exp(ricky.seq[j]*(1-(current.pop/20)))
}
}
matplot(y = ricky[1,])
matplot(y = ricky[1,951:1000])
Na<-matrix(nrow=1001,ncol=1)
ran.lambda<-matrix(nrow = 1001,ncol=1)
ran.lambda[1,1]<- runif(1,-1,0)
gen.a<-matrix(nrow=1001,ncol=1)
gen.a[1,1]<-0
r<-1
K<-20
Na[1,1]<-10#N0
tmax=1000
for(i in 2:1001){
gen.a[i-1,1]<-i-1
ran.lambda[i,1]<- runif(1,0,1)
r<-ran.lambda[i,1]
Na[i,1]=Na[i-1,1]*exp(r*(1-Na[i-1,1]/K))
}
data.a<-cbind(gen.a,ran.lambda,Na)
matplot(data.a[952:1001,1],data.a[952:1001,3], type="p",
xlab="generation",ylab="population",
main="figure a (9.3a) last 50 years")
matplot(data.a[952:1001,1],data.a[952:1001,3], type="p",
xlab="generation",ylab="population",
main="figure a (9.3a) last 50 years")
matplot(data.a[,1],data.a[,3], type="l",
xlab="generation",ylab="population",
main="figure 9.3a")
matplot(data.a[952:1001,1],data.a[952:1001,3], type="p",
xlab="generation",ylab="population",
main="figure a (9.3a) last 50 years")
matplot(data.a[,1],data.a[,3], type="l",
xlab="generation",ylab="population",
main="figure 9.3a")
matplot(data.a[952:1001,1],data.a[952:1001,3], type="p",
xlab="generation",ylab="population",
main="figure a (9.3a) last 50 years")
matplot(data.b[,1],data.b[,3], type="l",
xlab="generation",ylab="population",
main="figure 9.3b")
data.b<-cbind(gen.b,ran.lambda,Nb)
for(i in 2:1001){
gen.b[i-1,1]<-i-1
ran.lambda[i,1]<- runif(1,1,10)
r<-ran.lambda[i,1]
Nb[i,1]=Nb[i-1,1]*exp(r*(1-Nb[i-1,1]/K))
}
Nb<-matrix(nrow=1001,ncol=1)
ran.lambda<-matrix(nrow = 1001,ncol=1)
ran.lambda[1,1]<- runif(1,-1,0)
gen.b<-matrix(nrow=1001,ncol=1)
gen.b[1,1]<-0
r<-1
K<-20
Nb[1,1]<-10#N0
tmax=1000
for(i in 2:1001){
gen.b[i-1,1]<-i-1
ran.lambda[i,1]<- runif(1,1,10)
r<-ran.lambda[i,1]
Nb[i,1]=Nb[i-1,1]*exp(r*(1-Nb[i-1,1]/K))
}
matplot(data.b[,1],data.b[,3], type="l",
xlab="generation",ylab="population",
main="figure 9.3b")
data.b<-cbind(gen.b,ran.lambda,Nb)
matplot(data.b[,1],data.b[,3], type="l",
xlab="generation",ylab="population",
main="figure 9.3b")
Nc<-matrix(nrow=1001,ncol=1)
ran.lambda<-matrix(nrow = 1001,ncol=1)
ran.lambda[1,1]<- runif(1,-1,0)
gen.c<-matrix(nrow=1001,ncol=1)
gen.c[1,1]<-0
r<-1
K<-20
Nc[1,1]<-10#N0
tmax=1000
for(i in 2:1001){
gen.c[i-1,1]<-i-1
ran.lambda[i,1]<- runif(1,10,100)
r<-ran.lambda[i,1]
Nc[i,1]=Nc[i-1,1]*exp(r*(1-Nc[i-1,1]/K))
}
data.c<-cbind(gen.c,ran.lambda,Nc)
matplot(data.c[952:1001,1],data.c[952:1001,3], type="p",
xlab="generation",ylab="population",
main="figure c (9.3c) last 50 years")
matplot(data.c[,1],data.c[,3], type="l",
xlab="generation",ylab="population",
main="figure 9.3c")
matplot(data.c[952:1001,1],data.c[952:1001,3], type="p",
xlab="generation",ylab="population",
main="figure c (9.3c) last 50 years")
matplot(data.c[,1],data.c[,3], type="l",
xlab="generation",ylab="population",
main="figure 9.3c")
View(gen.a)
runif(1,0,1)
runif(1,0,1)
r<-4
for(i in 2:1001){
gen.b[i-1,1]<-i-1
Nb[i,1]=Nb[i-1,1]*exp(r*(1-Nb[i-1,1]/K))
}
data.b<-cbind(gen.b,ran.lambda,Nb)
matplot(data.b[952:1001,1],data.b[952:1001,3], type="p",
xlab="generation",ylab="population",
main="figure b (9.3b) last 50 years")
r<-3
for(i in 2:1001){
gen.b[i-1,1]<-i-1
Nb[i,1]=Nb[i-1,1]*exp(r*(1-Nb[i-1,1]/K))
}
matplot(data.b[952:1001,1],data.b[952:1001,3], type="p",
xlab="generation",ylab="population",
main="figure b (9.3b) last 50 years")
matplot(data.b[952:1001,1],data.b[952:1001,3], type="l",
xlab="generation",ylab="population",
main="figure b (9.3b) last 50 years")
View(data.b)
r<-1
for(i in 2:1001){
gen.b[i-1,1]<-i-1
ran.lambda[i,1]<- runif(1,1,10)
r<-ran.lambda[i,1]
Nb[i,1]=Nb[i-1,1]*exp(r*(1-Nb[i-1,1]/K))
}
data.b<-cbind(gen.b,ran.lambda,Nb)
matplot(data.b[952:1001,1],data.b[952:1001,3], type="p",
xlab="generation",ylab="population",
main="figure b (9.3b) last 50 years")
r<-3
K<-20
Nb[1,1]<-10#N0
tmax=1000
for(i in 2:1001){
gen.b[i-1,1]<-i-1
Nb[i,1]=Nb[i-1,1]*exp(r*(1-Nb[i-1,1]/K))
}
data.b<-cbind(gen.b,Nb)
matplot(data.b[952:1001,1],data.b[952:1001,2], type="l",
xlab="generation",ylab="population",
main="figure b (9.3b) last 50 years")
rc<-5
gen.c<-matrix(nrow=1001,ncol=1)
gen.c[1,1]<-0
rc<-5
K<-20
Nc[1,1]<-10#N0
tmax=1000
for(i in 2:1001){
gen.c[i-1,1]<-i-1
Nc[i,1]=Nc[i-1,1]*exp(rc*(1-Nc[i-1,1]/K))
}
rc<-5
K<-20
Nc[1,1]<-10#N0
tmax=1000
for(i in 2:1001){
gen.c[i-1,1]<-i-1
Nc[i,2]=Nc[i-1,2]*exp(rc*(1-Nc[i-1,2]/K))
}
rc<-5
K<-20
Nc[1,1]<-10#N0
tmax=1000
for(i in 2:1001){
gen.c[i-1,1]<-i-1
Nc[i,1]=Nc[i-1,1]*exp(rc*(1-Nc[i-1,1]/K))
}
data.c<-cbind(gen.c,Nc)
matplot(data.c[952:1001,1],data.c[952:1001,3], type="p",
xlab="generation",ylab="population",
main="figure c (9.3c) last 50 years")
matplot(data.c[952:1001,1],data.c[952:1001,2], type="l",
xlab="generation",ylab="population",
main="figure c (9.3c) last 50 years")
Na<-matrix(nrow=1001,ncol=1)
gen.a<-matrix(nrow=1001,ncol=1)
gen.a[1,1]<-0
r<-1
K<-20
Na[1,1]<-10#N0
tmax=1000
for(i in 2:1001){
gen.a[i-1,1]<-i-1
Na[i,1]=Na[i-1,1]*exp(r*(1-Na[i-1,1]/K))
}
data.a<-cbind(gen.a,Na)
matplot(data.a[952:1001,1],data.a[952:1001,3], type="l",
xlab="generation",ylab="population",
main="figure a (9.3a) last 50 years")
matplot(data.a[952:1001,1],data.a[952:1001,2], type="l",
xlab="generation",ylab="population",
main="figure a (9.3a) last 50 years")
r<-1.5
K<-20
Na[1,1]<-10#N0
tmax=1000
for(i in 2:1001){
gen.a[i-1,1]<-i-1
Na[i,1]=Na[i-1,1]*exp(r*(1-Na[i-1,1]/K))
}
data.a<-cbind(gen.a,Na)
matplot(data.a[952:1001,1],data.a[952:1001,2], type="l",
xlab="generation",ylab="population",
main="figure a (9.3a) last 50 years")
r<-2
K<-20
Na[1,1]<-10#N0
tmax=1000
for(i in 2:1001){
gen.a[i-1,1]<-i-1
Na[i,1]=Na[i-1,1]*exp(r*(1-Na[i-1,1]/K))
}
data.a<-cbind(gen.a,Na)
matplot(data.a[952:1001,1],data.a[952:1001,2], type="l",
xlab="generation",ylab="population",
main="figure a (9.3a) last 50 years")
r<-1
K<-20
Na[1,1]<-10#N0
tmax=1000
for(i in 2:1001){
gen.a[i-1,1]<-i-1
Na[i,1]=Na[i-1,1]*exp(r*(1-Na[i-1,1]/K))
}
data.a<-cbind(gen.a,Na)
matplot(data.a[952:1001,1],data.a[952:1001,2], type="l",
xlab="generation",ylab="population",
main="figure a (9.3a) last 50 years")
Nc<-matrix(nrow=1001,ncol=1)
ran.lambda<-matrix(nrow = 1001,ncol=1)
gen.c<-matrix(nrow=1001,ncol=1)
gen.c[1,1]<-0
rc<-5
K<-20
Nc[1,1]<-10#N0
tmax=1000
for(i in 2:1001){
gen.c[i-1,1]<-i-1
Nc[i,1]=Nc[i-1,1]*exp(rc*(1-Nc[i-1,1]/K))
}
data.c<-cbind(gen.c,Nc)
matplot(data.c[952:1001,1],data.c[952:1001,2], type="l",
xlab="generation",ylab="population",
main="figure c (9.3c) last 50 years")
matplot(data.c[,1],data.c[,2], type="l",
xlab="generation",ylab="population",
main="figure 9.3c")
```{r}
mean.seq <- seq(from = 0.06, to = 0.15, by = 0.01)
sd.seq <- seq(from = 0.46, to = 0.55, by = 0.01)
loglam.mat <- matrix(nrow = 10, ncol = 6)
for (j in 1:dim(loglam.mat)[1]){
loglam.mat[j,1] <- mean.seq[j]
loglam.mat[j,2] <- sd.seq[j]
sample <- rlnorm(50, meanlog = mean.seq[j], sdlog = sd.seq[j])
loglam.mat[j,3] <- mean(sample)
loglam.mat[j,4] <- exp(mean(sample))
loglam.mat[j,5] <- var(sample)
loglam.mat[j,6] <- log(loglam.mat[j,3]/loglam.mat[j,4])*(-2*loglam.mat[j,3]^2)
}
colnames(loglam.mat) <- c("logmean", "logsd", "amean", "gmean", "var", "left")
loglam.frame <- data.frame(loglam.mat)
loglam.reg <- glm(left ~ var, data = loglam.frame)
summary(loglam.reg)
View(loglam.frame)
-log(3.285643/1.189562)
loglam.reg <- glm(left ~ var, data = loglam.frame)
summary(loglam.reg)
-log(1.189562/3.285643)
-log(mean(loglam.frame$gmean/mean(loglam.frame$amean))
-log(mean(loglam.frame$gmean)/mean(loglam.frame$amean))
slope <- -log(mean(loglam.frame$gmean)/mean(loglam.frame$amean))
slope = -log(mean(loglam.frame$gmean)/mean(loglam.frame$amean))
loglam.reg <- lm(left ~ var, data = loglam.frame)
summary(loglam.reg)
-2*mean(loglam.frame$amean)
-2*mean(loglam.frame$amean)^2
summary(loglam.reg)
cdiv <- 15.2
cdiv <- 15.2
tdiv <- 22.1
csd <- 3.1
tsc <- 5.9
s <-
j <- 1-(3/(4*(cdiv+tdiv-2)-1))
s <- csd*(7/17) + tsc*(10/17)
d <- ((tdiv-cdiv)/s)*j
vd <- (cdiv+tdiv)/(tdiv*cdiv) + d^2/(2*(cdiv+tdiv))
a <- 35
b <- 8
c <- 4
d <- 22
ohat <-((a+b)*(a+c))/(a+b+c+d)
vo <- ohat*((a+c)/(a+c+b+d))*((c+d)/(a+b+c+d))
o <- (a+b+c+d)/4
or <- exp((o-ohat)/vo)
or <- (o-ohat)/vo
var <- 1/vo
library(dplyr)
library(tidyr)
classes <- c("character", "numeric", "numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric")
invert <- read.csv("Invertebrate ID.csv", header = T,  colClasses = classes)
setwd("D:/Programs/GitHub/Misc")
library(dplyr)
library(tidyr)
classes <- c("character", "numeric", "numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric")
invert <- read.csv("Invertebrate ID.csv", header = T,  colClasses = classes)
invert <- invert %>%
mutate(Vegetation = rowSums(.[14:16], na.rm = T), Pool = rowSums(.[17:19], na.rm = T), Riffle = rowSums(.[20:22], na.rm = T))
invert <- t(invert)
invert <- data.frame(invert)
type.vector <- c("Vegetation", "Vegetation", "Vegetation", "Pool","Pool","Pool", "Riffle", "Riffle", "Riffle")
invert2 <- invert[c(1, 14:22),]
colnames(invert2) <- as.character(unlist(invert2[1,]))
invert2 <- invert2[-1,]
invert2$Type <- type.vector
invert2 <- invert2 %>%
add_rownames(var = "Site") %>%
gather(Family, Count, Aeshnidae:Corydalidae) %>%
arrange(Site)
invert2 <- transform(invert2, Count = as.numeric(Count))
ept.list <- c("Ephemeridae","Polymitarcyidae", "Isonychiidae", "Oligoneuriidae", "Leptohyphidae", "Caenidae",
"Ephemerellidae", "Heptageniidae", "Leptophlebiidae", "Ametropodidae", "Baetidae", "Ameletidae",
"Siphlonuridae", "Pteronarcyidae", "Taeniopterygidae", "Nemouridae", "Capniidae", "Leuctridae",
"Perlidae", "Chloroperlidae", "Perlodidae", "Helicopsychidae", "Hydroptilidae", "Hydropsychidae",
"Leptoceridae", "Glossosomatidae", "Rhyacophlidae", "Philopotamidae", "Polycentropodidae",
"Psychomyiidae", "Brachycentridae", "Uenoidae", "Limnephilidae", "Apataniidae")
ept.counts <- invert2 %>%
filter(Family %in% ept.list) %>%
group_by(Site) %>%
summarise(EPT = sum(Count, na.rm = T))
ept.counts$Type <- type.vector
ept.model <- lm(EPT ~ Type, data = ept.counts)
ept.model <- glm(EPT ~ Type, data = ept.counts)
summary(ept.model)
site.richness <- invert2 %>%
filter(Count > 0) %>%
group_by(Site) %>%
summarise(Richness = length(Family))
site.richness$Type <- type.vector
richness.model <- glm(Richness ~ Type, data = site.richness)
summary(richness.model)
ept.model <- glm(EPT ~ Type, data = ept.counts, family = "poisson")
summary(ept.model)
richness.model <- glm(Richness ~ Type, data = site.richness, family = "poisson")
summary(richness.model)
EPT.confint <- exp(confint(ept.model))
EPT.confint
exp( 1.3863)
richness.confint <- exp(confint(richness.model))
richness.confint
summary(richness.model)
exp(0.7309)
exp(0.5705)
library(ggplot2)
ggplot(ept.counts, aes(Type, EPT))
ggplot(ept.counts, aes(Type, EPT, color = Type)) + geom_boxplot()
ggplot(site.richness, aes(Type, Richness, color = Type)) + geom_boxplot()
